<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Juego Matemático</title>
<style>
  body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #E0FFFF; /* Color de fondo hermoso */
    transition: background-color 0.5s ease; /* Animación suave de cambio de color de fondo */
  }
  h1 {
    font-size: 48px; /* Tamaño grande para el título principal */
    color: #ff0000; /* Color llamativo para el título principal */
    transition: transform 0.5s ease; /* Animación de zoom */
  }
  h1:hover {
    transform: scale(1.1); /* Efecto de zoom al pasar el cursor */
  }
  .respuesta-btn {
    font-size: 24px; /* Tamaño grande para los botones de respuesta */
    margin: 10px;
    padding: 15px 30px;
    cursor: pointer;
    background-color: #4caf50; /* Color verde para los botones de respuesta */
    color: #fff; /* Texto blanco para los botones de respuesta */
    border: none;
    border-radius: 8px;
    transition: background-color 0.3s, transform 0.5s ease; /* Transición suave y animación de zoom */
  }
  .respuesta-btn:hover {
    background-color: #45a049; /* Color verde más oscuro al pasar el ratón */
    transform: scale(1.05); /* Efecto de zoom al pasar el cursor */
  }
  .respuesta-btn:focus {
    outline: none; /* Eliminar el contorno al enfocar */
  }
  .mensaje {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #ff6f61; /* Color de fondo para el mensaje */
    color: #fff; /* Texto blanco para el mensaje */
    padding: 10px 20px;
    border-radius: 8px;
    font-size: 20px;
    z-index: 9999;
  }
  .progress-bar {
    width: 100%;
    background-color: #ddd;
    border-radius: 8px;
    margin-top: 20px;
    overflow: hidden;
  }
  .progress {
    width: 0;
    height: 30px;
    background-color: #4caf50;
    transition: width 0.5s ease; /* Animación suave de progreso */
  }
</style>
</head>
<body>
  <h1>MathMania</h1>
  <div id="operacion" style="font-size: 36px;"></div> <!-- Números más grandes y bonitos -->
  <div id="respuestas"></div>
  <div id="mensaje" class="mensaje" style="display: none;"></div>
  <div class="progress-bar">
    <div id="progress" class="progress"></div>
  </div>

  <script>
    let correctAnswer;
    let score = 0;
    let totalQuestions = 0;

    // Función para generar una operación aleatoria dependiendo de la dificultad
    function generarOperacion() {
      var num1, num2;

      // Ajustar los rangos de los números dependiendo de la dificultad
      switch (difficulty) {
        case 'easy':
          num1 = Math.floor(Math.random() * 5) + 1; // Números entre 1 y 5
          num2 = Math.floor(Math.random() * 5) + 1;
          break;
        case 'medium':
          num1 = Math.floor(Math.random() * 10) + 1; // Números entre 1 y 10
          num2 = Math.floor(Math.random() * 10) + 1;
          break;
        case 'hard':
          num1 = Math.floor(Math.random() * 20) + 1; // Números entre 1 y 20
          num2 = Math.floor(Math.random() * 20) + 1;
          break;
        default:
          num1 = Math.floor(Math.random() * 10) + 1; // Dificultad media por defecto
          num2 = Math.floor(Math.random() * 10) + 1;
      }

      var operadores = ['+', '-', '*', '/'];
      var operador = operadores[Math.floor(Math.random() * operadores.length)];
      var operacion = num1 + ' ' + operador + ' ' + num2;
      correctAnswer = eval(operacion);
      return operacion;
    }

    // Función para mostrar una nueva operación en pantalla
    function mostrarOperacion() {
      var nuevaOperacion = generarOperacion();
      document.getElementById("operacion").textContent = nuevaOperacion;

      // Generar botones de respuesta aleatoria
      var respuestas = [];
      respuestas.push(correctAnswer);
      while (respuestas.length < 4) {
        var randomAnswer = Math.floor(Math.random() * 30) + 1; // Generar número aleatorio entre 1 y 30
        if (!respuestas.includes(randomAnswer)) {
          respuestas.push(randomAnswer);
        }
      }
      respuestas.sort(() => Math.random() - 0.5); // Mezclar las respuestas aleatoriamente

      // Mostrar botones de respuesta en la página
      var respuestasDiv = document.getElementById("respuestas");
      respuestasDiv.innerHTML = "";
      respuestas.forEach(function(answer) {
        var button = document.createElement("button");
        button.textContent = answer;
        button.className = "respuesta-btn";
        button.onclick = function() {
          verificarRespuesta(answer);
        };
        respuestasDiv.appendChild(button);
      });
    }

    // Función para mostrar un mensaje temporal
    function mostrarMensaje(mensaje, tipo) {
      var mensajeDiv = document.getElementById("mensaje");
      mensajeDiv.textContent = mensaje;
      mensajeDiv.style.backgroundColor = tipo === 'correcto' ? '#4caf50' : '#ff6f61';
      mensajeDiv.style.display = 'block';
      setTimeout(function() {
        mensajeDiv.style.display = 'none';
      }, 2000); // Ocultar el mensaje después de 2 segundos (2000 milisegundos)
    }

    // Función para verificar si la respuesta seleccionada por el usuario es correcta
    function verificarRespuesta(respuestaUsuario) {
      totalQuestions++;
      if (respuestaUsuario == correctAnswer) {
        score++;
        mostrarMensaje("¡Correcto!", 'correcto');
        audioCorrect.play(); // Reproducir efecto de sonido para respuesta correcta
      } else {
        mostrarMensaje("Incorrecto. La respuesta correcta es " + correctAnswer, 'incorrecto');
        audioIncorrect.play(); // Reproducir efecto de sonido para respuesta incorrecta
      }
      // Mostrar una nueva operación después de verificar la respuesta
      mostrarOperacion();
      actualizarBarraProgreso();
    }

    // Función para actualizar la barra de progreso
    function actualizarBarraProgreso() {
      var progress = (score / totalQuestions) * 100;
      document.getElementById("progress").style.width = progress + '%';
    }

    let difficulty = 'medium'; // Dificultad por defecto
    
    // Función para ajustar la dificultad del juego
    function setDifficulty(level) {
      difficulty = level;
      mostrarOperacion(); // Mostrar una nueva operación con la nueva dificultad
    }

    // Mostrar la primera operación al cargar la página
    mostrarOperacion();
  </script>

  <h2>Selecciona una Dificultad</h2>
  <button onclick="setDifficulty('easy')" style="background-color: #8cff66;" class="respuesta-btn">Fácil</button>
  <button onclick="setDifficulty('medium')" style="background-color: #ffcc00;" class="respuesta-btn">Media</button>
  <button onclick="setDifficulty('hard')" style="background-color: #ff6666;" class="respuesta-btn">Difícil</button>

  <!-- Botón para cambiar el modo claro y oscuro -->
  <button onclick="toggleDarkMode()" style="margin-top: 20px;" class="respuesta-btn">Modo Oscuro</button>

  <!-- Script para efectos de sonido -->
  <script>
    // Efecto de sonido para respuesta correcta
    var audioCorrect = new Audio('https://www.soundjay.com/button/beep-07.wav');
    // Efecto de sonido para respuesta incorrecta
    var audioIncorrect = new Audio('https://www.soundjay.com/button/beep-09.wav');

    // Función para alternar entre el modo claro y el modo oscuro
    function toggleDarkMode() {
      var body = document.body;
      body.classList.toggle("dark-mode");
    }
  </script>

  <!-- Estilos para el modo oscuro -->
  <style>
    .dark-mode {
      background-color: #333;
      color: #fff;
    }
  </style>

</body>
</html>
